<?php namespace ProcessWire;

class MarkupGoogleTranslate extends Process implements Module, ConfigurableModule {

    public static function getModuleinfo() {
    return [
        'title' => 'Google Page Translate',
        'summary' => 'Provides a simple interface for site visitors to translate the current page to Google supported languages. (Github fork by NewMediaConsulting for multilanguage support: https://github.com/cybermano/MarkupGoogleTranslate)',
        'author' => 'Jonathan Goodwin warp-design.co.uk & NewMediaConsulting www.newmc.it',
        'version' => 10,
    ];
    }

    //Utility to clean the URL to match the format Google Likes
    private function cleanUrl($url) {
        // $cleanUrl = str_replace('-','--',$url);
        $cleanUrl = str_replace('.','-',$url);
        return $cleanUrl;
    }

    public function buildGoogleTranslateUrl($languageIsoCode) {

        // User language
        (wire('user')->language->name == 'default') ? $userLang = $this->default_name : $userLang = wire('user')->language->name;
        ($userLang == '') ? $userLang = 'en' : null;

        //Get current page URL
        $currentPagePath = wire('page')->url;

        /*
        - Clean the URL to match the format Google Likes
        - But ignore home page to avoid outputting an unnecessary extra '/' later on
        */
        if ($currentPagePath != '/') {
            $currentPagePath = $this->cleanUrl($currentPagePath);
        } else {
            $currentPagePath = '';
        }

        //Get host domain
        $host = $this->cleanUrl(wire('config')->httpHost);

        
        /**
         *  It seems that Google accept only SSL cerificates (only https, not http)
         */
        //Check if we're using http/https
        $rootUrl = wire('pages')->get('/')->httpUrl;
        $scheme = (strpos($rootUrl,'https') !== false) ? 'https' : 'http' ;

        //Combine to build the translate URL
        $translateUrl = 'https://'.$host.'.translate.goog'.$currentPagePath.'?_x_tr_sch='.$scheme.'&_x_tr_sl='.$userLang.'&_x_tr_tl='.$languageIsoCode.'&_x_tr_hl='.$languageIsoCode.'&_x_tr_pto=wapp';

        return $translateUrl;

    }

    /*
    Available language codes for translation based
    on https://cloud.google.com/translate/docs/languages
    */
    public function availableLanguages() {

        return array(
            "Afrikaans" => "af",
            "Albanian" => "sq",
            "Amharic" => "am",
            "Arabic" => "ar",
            "Armenian" => "hy",
            "Azerbaijani" => "az",
            "Basque" => "eu",
            "Belarusian" => "be",
            "Bengali" => "bn",
            "Bosnian" => "bs",
            "Bulgarian" => "bg",
            "Catalan" => "ca",
            "Cebuano" => "ceb",
            "Chinese (Simplified)" => "zh-CN",
            "Chinese (Traditional)" => "zh-TW",
            "Corsican" => "co",
            "Croatian" => "hr",
            "Czech" => "cs",
            "Danish" => "da",
            "Dutch" => "nl",
            "English" => "en",
            "Esperanto" => "eo",
            "Estonian" => "et",
            "Finnish" => "fi",
            "French" => "fr",
            "Frisian" => "fy",
            "Galician" => "gl",
            "Georgian" => "ka",
            "German" => "de",
            "Greek" => "el",
            "Gujarati" => "gu",
            "Haitian Creole" => "ht",
            "Hausa" => "ha",
            "Hawaiian" => "haw",
            "Hebrew" => "he",
            "Hindi" => "hi",
            "Hmong" => "hmn",
            "Hungarian" => "hu",
            "Icelandic" => "is",
            "Igbo" => "ig",
            "Indonesian" => "id",
            "Irish" => "ga",
            "Italian" => "it",
            "Japanese" => "ja",
            "Javanese" => "jv",
            "Kannada" => "kn",
            "Kazakh" => "kk",
            "Khmer" => "km",
            "Kinyarwanda" => "rw",
            "Korean" => "ko",
            "Kurdish" => "ku",
            "Kyrgyz" => "ky",
            "Lao" => "lo",
            "Latin" => "la",
            "Latvian" => "lv",
            "Lithuanian" => "lt",
            "Luxembourgish" => "lb",
            "Macedonian" => "mk",
            "Malagasy" => "mg",
            "Malay" => "ms",
            "Malayalam" => "ml",
            "Maltese" => "mt",
            "Maori" => "mi",
            "Marathi" => "mr",
            "Mongolian" => "mn",
            "Myanmar (Burmese)" => "my",
            "Nepali" => "ne",
            "Norwegian" => "no",
            "Nyanja (Chichewa)" => "ny",
            "Odia (Oriya)" => "or",
            "Pashto" => "ps",
            "Persian" => "fa",
            "Polish" => "pl",
            "Portuguese" => "pt",
            "Punjabi" => "pa",
            "Romanian" => "ro",
            "Russian" => "ru",
            "Samoan" => "sm",
            "Scots Gaelic" => "gd",
            "Serbian" => "sr",
            "Sesotho" => "st",
            "Shona" => "sn",
            "Sindhi" => "sd",
            "Sinhala (Sinhalese)" => "si",
            "Slovak" => "sk",
            "Slovenian" => "sl",
            "Somali" => "so",
            "Spanish" => "es",
            "Sundanese" => "su",
            "Swahili" => "sw",
            "Swedish" => "sv",
            "Tagalog (Filipino)" => "tl",
            "Tajik" => "tg",
            "Tamil" => "ta",
            "Tatar" => "tt",
            "Telugu" => "te",
            "Thai" => "th",
            "Turkish" => "tr",
            "Turkmen" => "tk",
            "Ukrainian" => "uk",
            "Urdu" => "ur",
            "Uyghur" => "ug",
            "Uzbek" => "uz",
            "Vietnamese" => "vi",
            "Welsh" => "cy",
            "Xhosa" => "xh",
            "Yiddish" => "yi",
            "Yoruba" => "yo",
            "Zulu" => "zu",
        );
    }

    /*
    Return Available language flipped as code=>title
    For AsmSelect usage
    */
    private function available_flipped($k) {
        $arr = array_flip($this->availableLanguages());
        return $arr[$k];
    }

    /**
     * @param array $specific = set a two letters ISO code for single and specific language (useful in case of specific translation for single pages)
     */
    public function displayTranslateWidget(array $specific = []) {

        //Compile the available languages as select field options
        $options = '';
        // use defaults or custom argument passed
        // if no languages selected, show all
        empty($this->custom_languages) ? $custom_languages = $this->availableLanguages() : $custom_languages = $this->custom_languages;

        // Module override
        if($this->overrides == 1){
            // TEMPLATES
            if (!empty($this->multiple_override)){
                if (in_array(wire('page')->template->id,$this->tpls)) $custom_languages = $this->multiple_override;
            } else {
                if (in_array(wire('page')->template->id,$this->tpls)) $custom_languages = $this->availableLanguages();
            }

            if (!empty($this->single_override)){
                if (wire('page')->template->id == $this->tpl) $custom_languages = $this->single_override;
            } else {
                if (wire('page')->template->id == $this->tpl) $custom_languages = $this->availableLanguages();
            }

            // PAGES
            // Single Page ids
            if (strpos($this->page_ids, '|') !== false) $ids = explode('|',$this->page_ids);

            // Range of ids
            if (strpos($this->page_ids, '-') !== false){
                $boundaries = explode('-',$this->page_ids);
                if (isset($boundaries[0]) && ($boundaries[0] != '') && isset($boundaries[1]) && ($boundaries[1] != '')){
                    $ids = range($boundaries[0],$boundaries[1]);
                } else {
                    $ids = [];
                }
            }

            if (!isset($ids) && ($this->page_ids != '')){
                $ids = [$this->page_ids];
            }

            // Get override languages by tpls or page ids
            if (isset($ids)){
                if (!empty($this->pages_override)){
                    if (in_array(wire('page')->id,$ids)) $custom_languages = $this->pages_override;
                } else {
                    if (in_array(wire('page')->id,$ids)) $custom_languages = $this->availableLanguages();
                }
            }

        }

        // page code override
        if (!empty($specific)) $custom_languages = $specific;
        // build select options
        foreach ($custom_languages as $code) {
            $url = $this->buildGoogleTranslateUrl($code);
            // workaround with flipped array
            $options .= '<option value="'.$url.'">'.$this->available_flipped($code).'</option>';
        }

        ($this->icon != 0) ? $icon = '<img class="" src="https://fonts.gstatic.com/s/i/productlogos/translate/v6/'.$this->icon_size.'px.svg" alt="Google Translate">' : $icon = '';

        $out = '';
        //Compile and output
        if ($this->wrapper) $out .= '<div class="'.$this->div_classes.'">';
        // Place icon on left
        if ($this->icon == 1) $out .= $icon;
        // Build Select
        $out .= '<select class="'.$this->select_classes.'" onchange="location = this.options[this.selectedIndex].value;">';
        // set first option label override
        ($this->first_option == '') ? $label = 'Translate page' : $label = $this->first_option;
        $out .= '<option>'.$label.'</option>';
        $out .= $options;
        $out .= '</select>';
        // Place icon on right
        if ($this->icon == 2) $out .= $icon;
        if ($this->wrapper) $out .= '</div>';

        return $out;
    }



    /**
     * 
     *  WIP - NATIVE NAMES for better UX
     * 
     *  $arr = $this->languageCodeNativeNames();
     *  var_dump($arr['ar']['name'] . ' - ' . $arr['ar']['native']);
     * 
     * 
     */
    public function languageCodeNativeNames(){ 
        return array(
        "af"    => ["name" => "Afrikaans",              "native" => "Afrikaans"],
        "sq"    => ["name" => "Albanian",               "native" => "Shqip"],   
        "am"    => ["name" => "Amharic",                "native" => "አማርኛ"],   
        "ar"    => ["name" => "Arabic",                 "native" => "العَرَبِيَّة"],   
        "hy"    => ["name" => "Armenian",               "native" => "Հայերէն"],   
        "az"    => ["name" => "Azerbaijani",            "native" => "آذربایجان - ;دیلی"],   
        "eu"    => ["name" => "Basque",                 "native" => "Euskara"],
        "be"    => ["name" => "Belarusian",             "native" => "Беларуская мова"],   
        "bn"    => ["name" => "Bengali",                "native" => "বাংলা"],   
        "bs"    => ["name" => "Bosnian",                "native" => "Bosanski"],   
        "bg"    => ["name" => "Bulgarian",              "native" => "български език"],   
        "ca"    => ["name" => "Catalan",                "native" => "Català"],   
        "ceb"   => ["name" => "Cebuano" ,               "native" => "Sinugbuanong Binisayâ"],  
        "zh-CN" => ["name" => "Chinese (Simplified)",   "native" => ""],
        "zh-TW" => ["name" => "Chinese (Traditional)",  "native" => ""],
        "co"    => ["name" => "Corsican",               "native" => "Corsu"],   
        "hr"    => ["name" => "Croatian",               "native" => "Hrvatski"],   
        "cs"    => ["name" => "Czech",                  "native" => ""],   
        "da"    => ["name" => "Danish",                 "native" => ""],   
        "nl"    => ["name" => "Dutch",                  "native" => ""],   
        "en"    => ["name" => "English",                "native" => ""],   
        "eo"    => ["name" => "Esperanto",              "native" => ""],   
        "et"    => ["name" => "Estonian",               "native" => ""],   
        "fi"    => ["name" => "Finnish",                "native" => ""],   
        "fr"    => ["name" => "French",                 "native" => ""],   
        "fy"    => ["name" => "Frisian",                "native" => ""],   
        "gl"    => ["name" => "Galician",               "native" => ""],   
        "ka"    => ["name" => "Georgian",               "native" => ""],   
        "de"    => ["name" => "German",                 "native" => ""],   
        "el"    => ["name" => "Greek",                  "native" => ""],   
        "gu"    => ["name" => "Gujarati",               "native" => ""],   
        "ht"    => ["name" => "Haitian Creole",         "native" => ""],   
        "ha"    => ["name" => "Hausa",                  "native" => ""],   
        "haw"   => ["name" => "Hawaiian" ,              "native" => ""],  
        "he"    => ["name" => "Hebrew",                 "native" => ""],   
        "hi"    => ["name" => "Hindi",                  "native" => ""],   
        "hmn"   => ["name" => "Hmong" ,                 "native" => ""],  
        "hu"    => ["name" => "Hungarian",              "native" => ""],   
        "is"    => ["name" => "Icelandic",              "native" => ""],   
        "ig"    => ["name" => "Igbo",                   "native" => ""],   
        "id"    => ["name" => "Indonesian",             "native" => ""],   
        "ga"    => ["name" => "Irish",                  "native" => ""],   
        "it"    => ["name" => "Italian",                "native" => "Italiano"],   
        "ja"    => ["name" => "Japanese",               "native" => "日本語"],   
        "jv"    => ["name" => "Javanese",               "native" => ""],   
        "kn"    => ["name" => "Kannada",                "native" => ""],   
        "kk"    => ["name" => "Kazakh",                 "native" => ""],   
        "km"    => ["name" => "Khmer",                  "native" => ""],   
        "rw"    => ["name" => "Kinyarwanda",            "native" => ""],   
        "ko"    => ["name" => "Korean",                 "native" => ""],   
        "ku"    => ["name" => "Kurdish",                "native" => ""],   
        "ky"    => ["name" => "Kyrgyz",                 "native" => ""],   
        "lo"    => ["name" => "Lao",                    "native" => ""],   
        "la"    => ["name" => "Latin",                  "native" => ""],   
        "lv"    => ["name" => "Latvian",                "native" => ""],   
        "lt"    => ["name" => "Lithuanian",             "native" => ""],   
        "lb"    => ["name" => "Luxembourgish",          "native" => ""],   
        "mk"    => ["name" => "Macedonian",             "native" => ""],   
        "mg"    => ["name" => "Malagasy",               "native" => ""],   
        "ms"    => ["name" => "Malay",                  "native" => ""],   
        "ml"    => ["name" => "Malayalam",              "native" => ""],   
        "mt"    => ["name" => "Maltese",                "native" => ""],   
        "mi"    => ["name" => "Maori",                  "native" => ""],   
        "mr"    => ["name" => "Marathi",                "native" => ""],   
        "mn"    => ["name" => "Mongolian",              "native" => ""],   
        "my"    => ["name" => "Myanmar (Burmese)",      "native" => ""],   
        "ne"    => ["name" => "Nepali",                 "native" => ""],   
        "no"    => ["name" => "Norwegian",              "native" => ""],   
        "ny"    => ["name" => "Nyanja (Chichewa)",      "native" => ""],   
        "or"    => ["name" => "Odia (Oriya)",           "native" => ""],   
        "ps"    => ["name" => "Pashto",                 "native" => ""],   
        "fa"    => ["name" => "Persian",                "native" => ""],   
        "pl"    => ["name" => "Polish",                 "native" => ""],   
        "pt"    => ["name" => "Portuguese",             "native" => ""],   
        "pa"    => ["name" => "Punjabi",                "native" => ""],   
        "ro"    => ["name" => "Romanian",               "native" => ""],   
        "ru"    => ["name" => "Russian",                "native" => ""],   
        "sm"    => ["name" => "Samoan",                 "native" => ""],   
        "gd"    => ["name" => "Scots Gaelic",           "native" => ""],   
        "sr"    => ["name" => "Serbian",                "native" => ""],   
        "st"    => ["name" => "Sesotho",                "native" => ""],   
        "sn"    => ["name" => "Shona",                  "native" => ""],   
        "sd"    => ["name" => "Sindhi",                 "native" => ""],   
        "si"    => ["name" => "Sinhala (Sinhalese)",    "native" => ""],   
        "sk"    => ["name" => "Slovak",                 "native" => ""],   
        "sl"    => ["name" => "Slovenian",              "native" => ""],   
        "so"    => ["name" => "Somali",                 "native" => ""],   
        "es"    => ["name" => "Spanish",                "native" => ""],   
        "su"    => ["name" => "Sundanese",              "native" => ""],   
        "sw"    => ["name" => "Swahili",                "native" => ""],   
        "sv"    => ["name" => "Swedish",                "native" => ""],   
        "tl"    => ["name" => "Tagalog (Filipino)",     "native" => ""],   
        "tg"    => ["name" => "Tajik",                  "native" => ""],   
        "ta"    => ["name" => "Tamil",                  "native" => ""],   
        "tt"    => ["name" => "Tatar",                  "native" => ""],   
        "te"    => ["name" => "Telugu",                 "native" => ""],   
        "th"    => ["name" => "Thai",                   "native" => ""],   
        "tr"    => ["name" => "Turkish",                "native" => ""],   
        "tk"    => ["name" => "Turkmen",                "native" => ""],   
        "uk"    => ["name" => "Ukrainian",              "native" => ""],   
        "ur"    => ["name" => "Urdu",                   "native" => ""],   
        "ug"    => ["name" => "Uyghur",                 "native" => ""],   
        "uz"    => ["name" => "Uzbek",                  "native" => ""],   
        "vi"    => ["name" => "Vietnamese",             "native" => ""],   
        "cy"    => ["name" => "Welsh",                  "native" => "Cymraeg"],   
        "xh"    => ["name" => "Xhosa",                  "native" => "isXhosa"],   
        "yi"    => ["name" => "Yiddish",                "native" => "אידיש"],   
        "yo"    => ["name" => "Yoruba",                 "native" => "èdè Yorùbá"],   
        "zu"    => ["name" => "Zulu",                   "native" => "isiZulu"],   
        );
        }



}
